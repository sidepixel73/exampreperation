bool: Тип bool представляет два логических значения: True (верно, истина) или False (неверно, ложь). Значение True служит для того, чтобы показать, что что-то истинно. Тогда как значение False, наоборот, показывает, что что-то ложно.
int: Тип int представляет целое число, например, 1, 4, 8, 50. По умолчанию стандартные числа расцениваются как числа в десятичной системе. Но Python также поддерживает числа в двоичной (0b), восьмеричной(0o) и шестнадцатеричной(0x) системах.
float: Тип float представляет число с плавающей точкой, например, 1.2 или 34.76. В качесте разделителя целой и дробной частей используется точка. Число float может иметь только 18 значимых символов.
complex: Тип complex представляет комплексные числа в формате вещественная_часть+мнимая_частьj - после мнимой части указывается суффикс j.
str: Тип str представляет строки. Строка представляет последовательность символов, заключенную в одинарные или двойные кавычки, например "hello" и 'hello'.
пример_bool: Возьмём переменную is_name_lev = False. В операторе условий можно просто вставить имя переменной.\nif is_name_lev:\n\t print(\"Его имя - Лев!\")
пример_int: Возьмём переменную lev_age = 18. Её можно использвать в:\n\t>В функции range(lev_age)\n\t>В цикле for:\n\t\tfor each_age in range(lev_age):\n\t\t\tprint(\"Льву \", each_age,\" лет.\")\n\t>Для счёта, где не нужны дробные части.
пример_float: Возьмём переменную floaty_pointy = 3.1459. Или, через модуль math, можно вывести число пи:\nfrom math import pi\nprint(pi)\n>>>3.141592653589793\n\nТакже можно передвигать точку, умножая или деля число на 10:\nfor n in range(3)\n\tprint(floaty_pointy * 10 ** n)\n>>>3.159\n>>>31.459000000000003\n>>>314.59000000000003
пример_complex: Возьмём переменную complex_num = 3+1j. Можно вывести его дейвствительную и мнимую часть:\n\tprint(complex_num.real)  # Дейвствительная часть\n\tprint(complex_num.imag)  # Мнимая часть\n>>>3.0\n1.0
пример_str: Факт! При использовании функции input(), то она возращает строку! И ещё, символы в строках можно выписывать отдельно, через [номер_символа - 1] после строки!\n...вам нужны примеры? Ну...\nя = '¯\_(ツ)_/¯'\nprint(я[4])  # :)\n>>>'ツ'